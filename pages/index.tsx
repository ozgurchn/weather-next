import { useState } from "react";
import Head from "next/head";
import axios from "axios";
import styles from "styles/Home.module.css";
import Loading from "components/loading";
import WeatherCard from "components/weatherCard";
import DailyWeatherCard from "components/dailyWeatherCard";

interface Props {
  weathers: any;
}

export default function Home({ weathers }: Props) {
  const [loading, setLoading] = useState(false);
  const [selectedWeather, setSelectedWeather] = useState<any>({});
  const [selectedCity, setSelectedCity] = useState("");

  const selectWeatherHandler = async (weather: any) => {
    try {
      setLoading(true);
      const { data } = await axios.get(
        `${process.env.api_url}/onecall?lat=${weather.coord.lat}&lon=${weather.coord.lon}&appid=${process.env.api_key}&units=metric`
      );
      setLoading(false);
      setSelectedWeather(data);
      setSelectedCity(weather.name);
    } catch (err) {
      setLoading(false);
      console.log("err", err.message);
    }
  };

  return (
    <>
      <Head>
        <title>WeahterPP</title>
        <meta name="description" content="Generated by SRD" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <span className={styles.gridTitle}>Populer Cities</span>
      <div className={styles.grid}>
        {weathers?.list?.map((weather: any, index: number) => (
          <WeatherCard
            key={index}
            temp={weather.main.temp}
            name={weather.name}
            imageUrl={`/${weather.name}.jpeg`}
            imageAlt={weather.name}
            onClick={() => selectWeatherHandler(weather)}
          />
        ))}
      </div>
      {selectedWeather?.daily && (
        <div className={styles.dailyWeatherWidget}>
          <h2>{selectedCity}</h2>
          <div className={styles.dailyWeatherCardContainer}>
            {selectedWeather?.daily.map((daily: any, index: number) => (
              <DailyWeatherCard daily={daily} key={index} />
            ))}
          </div>
        </div>
      )}
      {!selectedWeather.daily && (
        <div className={styles.dailyWeatherWidgetEmpty}>
          <span>NO SELECTED CITY</span>
        </div>
      )}
      {loading && <Loading />}
    </>
  );
}

export async function getStaticProps() {
  const { data } = await axios.get(
    `${process.env.api_url}/group?id=2759794,6058560,745044,6455259,6356055&appid=${process.env.api_key}&units=metric`
  );

  return {
    props: {
      weathers: data,
    },
  };
}
